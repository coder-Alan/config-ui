{"version":3,"sources":[null,"webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-picker/co-form-picker.vue?5fbc","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-picker/co-form-picker.vue?0bf6","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-picker/co-form-picker.vue?8110","uni-app:///uni_modules/config-ui/components/co-form-picker/co-form-picker.vue"],"names":["name","components","CoFormNormal","CoPicker","CoDictionaryPicker","CoTimePicker","CoAreaPicker","CoDatetimePicker","props","value","type","default","attrs","data","showSelect","valueName","optionMap","isSelfChange","computed","modelValue","get","set","config","pickerType","labelKey","valueKey","labelType","label","labelStyle","placeholder","disabled","borderAlign","list","dictName","returnType","multiple","watch","handler","immediate","methods","getValueName","getDictionaryPickerLabel","Reflect","valueNames","i","getDefaultPickerLabel","onConfirm","onClear","onClick"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2H;AAC3H;AACkE;AACL;;;AAG7D;AAC+K;AAC/K,gBAAgB,6KAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,yFAAM;AACR,EAAE,kGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,6FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAuqB,CAAgB,wnBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;ACmE3rB;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA,gBAuCA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;QAAA;MAAA;IACA;EACA;EACAE;IACA;MACAC;MACAC;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;EACA;EACAC;IACA;MACAC;QACA;QAEA;QACA;UACArB;QACA;QACA;MACA;MACAsB;IACA;IACAnB;MACAkB;QACA;QACA;UACA;YACA;UACA,OACA;YACA;UACA;QACA,OACA;UACA;QACA;MACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;QACA;MACA;MAEA;MACA;QACA;MACA,OACA;QACA;MACA,OACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACA1B;gBACAF;gBAAA,eACA;gBAAA,MAEA6B;kBAAA;kBAAA;gBAAA;gBAAA,KACAA;kBAAA;kBAAA;gBAAA;gBAAA,KACA7B;kBAAA;kBAAA;gBAAA;gBACAE;gBAAA;gBAAA;cAAA;gBAAA,KAEAF;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACA;cAAA;gBAAAE;gBACA;kBACAY;kBACAlB;gBACA;cAAA;gBAGA;gBAAA;cAAA;gBAAA,KAIA0B;kBAAA;kBAAA;gBAAA;gBACAQ;gBACAC;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACA;cAAA;gBAAA5C;gBACA2C;cAAA;gBAFAC;gBAAA;gBAAA;cAAA;gBAIA7B;gBAAA;gBAAA;cAAA;gBAAA;gBAAA,OAGA;cAAA;gBAAAA;cAAA;gBAEA;gBAEA;kBACA;oBACAY;oBACAlB;kBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IACA;IACAoC;MACA;MACA;QACA;UACA;QACA,OACA;UACA;QACA;QACA;MACA;MAEA;MACA;QAAArB;QAAAU;QAAAC;MAEA;QACA;QACA;UACA;UACA;UACAQ;QACA;QACA5B;MACA,OACA;QACA;QACAA;MACA;MACA;MAEA;QACA;UACAY;UACAlB;QACA;MACA;IACA;IACAqC;MACA;MACA;MACA;QACA;MACA,OACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MAEA;QACA;UACApB;UACAlB;QACA;MACA,OACA;QACA;MACA;MACA;IACA;IACAuC;MACA;QACA;MACA,OACA;QACA;MACA;IACA;EACA;AACA;AAAA,4B","file":"uni_modules/config-ui/components/co-form-picker/co-form-picker.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./co-form-picker.vue?vue&type=template&id=1e0ce86a&\"\nvar renderjs\nimport script from \"./co-form-picker.vue?vue&type=script&lang=js&\"\nexport * from \"./co-form-picker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/config-ui/components/co-form-picker/co-form-picker.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-picker.vue?vue&type=template&id=1e0ce86a&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = !(_vm.config.pickerType === \"dictionary\")\n    ? [\"time\", \"month\"].includes(_vm.config.pickerType)\n    : null\n  var g1 =\n    !(_vm.config.pickerType === \"dictionary\") && !g0\n      ? [\"date\", \"datetime\", \"daterange\", \"datetimerange\"].includes(\n          _vm.config.pickerType\n        )\n      : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n        g1: g1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-picker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-picker.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"co-form-picker\">\r\n\t\t<CoFormNormal\r\n\t\t\tv-model=\"valueName\"\r\n\t\t\t:attrs=\"config\"\r\n\t\t\t@click=\"onClick\"\r\n\t\t\t@clear=\"onClear(false)\"\r\n\t\t></CoFormNormal>\r\n\t\t<CoDictionaryPicker\r\n\t\t\tv-if=\"config.pickerType === 'dictionary'\"\r\n\t\t\t:show.sync=\"showSelect\"\r\n\t\t\t:title=\"config.label\"\r\n\t\t\t:dict-name=\"config.dictName\"\r\n\t\t\t:multiple=\"config.multiple\"\r\n\t\t\t:default-value=\"modelValue\"\r\n\t\t\t:clear=\"!config.required\"\r\n\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t@clear=\"onClear\"\r\n\t\t></CoDictionaryPicker>\r\n\t\t<CoTimePicker\r\n\t\t\tv-else-if=\"['time', 'month'].includes(config.pickerType)\"\r\n\t\t\t:show.sync=\"showSelect\"\r\n\t\t\t:type=\"config.pickerType\"\r\n\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t@clear=\"onClear\"\r\n\t\t></CoTimePicker>\r\n\t\t<CoDatetimePicker\r\n\t\t\tv-else-if=\"['date', 'datetime', 'daterange', 'datetimerange'].includes(config.pickerType)\"\r\n\t\t\t:show.sync=\"showSelect\"\r\n\t\t\t:type=\"config.pickerType\"\r\n\t\t\t:start-date=\"config.startDate\"\r\n\t\t\t:end-date=\"config.endDate\"\r\n\t\t\t:default-value=\"modelValue\"\r\n\t\t\t:clear=\"!config.required\"\r\n\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t@clear=\"onClear\"\r\n\t\t></CoDatetimePicker>\r\n\t\t<CoAreaPicker\r\n\t\t\tv-else-if=\"config.pickerType === 'area'\"\r\n\t\t\t:show.sync=\"showSelect\"\r\n\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t@clear=\"onClear\"\r\n\t\t></CoAreaPicker>\r\n\t\t<CoPicker\r\n\t\t\tv-else-if=\"config.pickerType === 'default' || !config.pickerType\"\r\n\t\t\t:show.sync=\"showSelect\"\r\n\t\t\t:title=\"config.label\"\r\n\t\t\t:list=\"config.list\"\r\n\t\t\t:label-key=\"config.labelKey\"\r\n\t\t\t:value-key=\"config.valueKey\"\r\n\t\t\t:multiple=\"config.multiple\"\r\n\t\t\t:default-value=\"modelValue\"\r\n\t\t\t:clear=\"!config.required\"\r\n\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t@clear=\"onClear\"\r\n\t\t></CoPicker>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\nimport CoFormNormal from '../co-form-normal/co-form-normal'\r\nimport CoPicker from '../co-picker/co-picker'\r\nimport CoDictionaryPicker from '../co-dictionary-picker/co-dictionary-picker'\r\nimport CoTimePicker from '../co-time-picker/co-time-picker'\r\nimport CoAreaPicker from '../co-area-picker/co-area-picker'\r\nimport CoDatetimePicker from '../co-datetime-picker/co-datetime-picker'\r\n\r\nimport { getDicName } from '../../utils/index.js'\r\n\r\n/**\r\n * FormPicker 表单选择器\r\n * @description form组件的内置组件，合并了CoPicker、CoDictionaryPicker、CoTimePicker、CoDatetimePicker、CoAreaPicker组件\r\n * @property {String|Number|Object|Array} v-model 绑定值\r\n * @property {Object} attrs 组件属性\r\n * \t@field pickerType = [default|dictionary|time|month|date|datetime|daterange|datetimerange|area] 选择器类型\r\n * \t\t@value default 默认选择器\r\n * \t\t@value dictionary 字典选择器\r\n * \t\t@value time 时间选择器\r\n * \t\t@value month 月选择器\r\n * \t\t@value date 日期选择器\r\n * \t\t@value datetime 日期时间选择器\r\n * \t\t@value daterange 日期范围选择器\r\n * \t\t@value datetimerange 日期时间范围选择器\r\n * \t\t@value area 地区选择器\r\n * \t\t@default default\r\n *  @field {String} returnType = [value|label|object] 返回值类型\r\n * \t \t@value value 返回值\r\n * \t \t@value label 返回标签\r\n * \t \t@value object 返回对象\r\n * \t\t@default value\r\n *  @field {String} labelType 标签类型 【CoFormNormal】\r\n *  @field {String} labelStyle 自定义标签的样式 【CoFormNormal】\r\n *  @field {String} placeholder 占位符 【CoFormNormal】\r\n *  @field {Boolean} disabled 是否禁用 【CoFormNormal】\r\n *  @field {String} borderAlign 标签对齐方式 【CoFormNormal】\r\n *  @field {String} label 标签内容 【CoFormNormal、CoDictionaryPicker、CoPicker】\r\n *  @field {Array<object>} list 选项列表 【CoPicker】\r\n *  @field {String} dictName 字典名称 【CoDictionaryPicker】\r\n *  @field {Boolean} multiple 是否多选 【CoDictionaryPicker、CoPicker】\r\n *  @field {Boolean} required 是否必填 【CoDictionaryPicker、CoPicker、CoDatetimePicker】\r\n *  @field {String|Number} startDate 开始日期 【CoDatetimePicker】\r\n *  @field {String|Number} endDate 结束日期 【CoDatetimePicker】\r\n *  @field {String} labelKey 标签字段名 【CoPicker】\r\n *  @field {String} valueKey 值字段名 【CoPicker】\r\n * @event {Function} clear 点击Picker组件的清除按钮触发 或者 点击CoFormNormal组件的Arrow组件的清除按钮触发\r\n * @event {Function} click 点击CoFormNormal组件的CoFormLabel组件的图标触发\r\n */\r\n\r\nexport default {\r\n\tname: 'CoFormPicker',\r\n\tcomponents: {\r\n\t\tCoFormNormal,\r\n\t\tCoPicker,\r\n\t\tCoDictionaryPicker,\r\n\t\tCoTimePicker,\r\n\t\tCoAreaPicker,\r\n\t\tCoDatetimePicker,\r\n\t},\r\n\tprops: {\r\n\t\tvalue: {\r\n\t\t\ttype: [String, Number, Object, Array],\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tattrs: {\r\n\t\t\ttype: [Object, null],\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tshowSelect: false,\r\n\t\t\tvalueName: '',\r\n\t\t\toptionMap: new Map(), // 仅 pickerType = default 生效，用于快速获取选项的label\r\n\t\t\tisSelfChange: false, // 是否是内部改变数据\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tmodelValue: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tset(val) {\r\n\t\t\t\tthis.$emit('input', val)\r\n\t\t\t}\r\n\t\t},\r\n\t\tconfig() {\r\n\t\t\tconst defaultAttrs = {\r\n\t\t\t\tpickerType: 'default',\r\n\t\t\t\tlabelKey: 'label',\r\n\t\t\t\tvalueKey: 'value',\r\n\t\t\t\tlabelType: 'arrow',\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tlabelStyle: '',\r\n\t\t\t\tplaceholder: '',\r\n\t\t\t\tdisabled: false,\r\n\t\t\t\tborderAlign: 'bottom',\r\n\t\t\t\tlist: [],\r\n\t\t\t\tdictName: '',\r\n\t\t\t\treturnType: 'value',\r\n\t\t\t\tmultiple: false,\r\n\t\t\t}\r\n\t\t\treturn Object.assign(defaultAttrs, this.attrs)\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\t'config.list': {\r\n\t\t\thandler(val) {\r\n\t\t\t\tif (!val.length) return\r\n\r\n\t\t\t\tconst optionMap = new Map()\r\n\t\t\t\tfor (let i = 0; i < val.length; i++) {\r\n\t\t\t\t\toptionMap.set(val[i][this.config.valueKey], val[i])\r\n\t\t\t\t}\r\n\t\t\t\tthis.optionMap = optionMap\r\n\t\t\t},\r\n\t\t\timmediate: true\r\n\t\t},\r\n\t\tmodelValue: {\r\n\t\t\thandler(newVal) {\r\n\t\t\t\t// 如果不是自身主动改变，则说明是外部数据的传入，需要回显\r\n\t\t\t\tif (!this.isSelfChange) {\r\n\t\t\t\t\tif (!newVal) {\r\n\t\t\t\t\t\tthis.valueName = ''\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.getValueName()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.isSelfChange = false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\timmediate: true\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tgetValueName() {\r\n\t\t\tconst data = this.modelValue\r\n\t\t\tif (!data) {\r\n\t\t\t\tthis.valueName = ''\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tconst { pickerType } = this.config\r\n\t\t\tif (pickerType === 'map') {\r\n\t\t\t\tthis.getDictionaryPickerLabel()\r\n\t\t\t}\r\n\t\t\telse if (['datetime', 'time', 'date', 'area'].includes(pickerType)) {\r\n\t\t\t\tthis.valueName = data\r\n\t\t\t}\r\n\t\t\telse if (pickerType === 'default') {\r\n\t\t\t\tthis.getDefaultPickerLabel()\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync getDictionaryPickerLabel() {\r\n\t\t\tlet valueName = ''\r\n\t\t\tconst data = this.modelValue\r\n\t\t\tconst { returnType, dictName, multiple } = this.config\r\n\r\n\t\t\tif (Reflect.toString.call(data) === '[object Object]') {\r\n\t\t\t\tif (Reflect.has(data, 'label')) {\r\n\t\t\t\t\tif (data.label) {\r\n\t\t\t\t\t\tvalueName = data.label\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (data.value) {\r\n\t\t\t\t\t\tvalueName = await getDicName(data.value, dictName)\r\n            this.modelValue = {\r\n              label: valueName,\r\n              value: data.value\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n        this.valueName = valueName\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tif (multiple) {\r\n\t\t\t\tconst valueNames = []\r\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\tconst name = await getDicName(data[i], dictName)\r\n\t\t\t\t\tvalueNames.push(name)\r\n\t\t\t\t}\r\n\t\t\t\tvalueName = valueNames.join(',')\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalueName = await getDicName(data, dictName)\r\n\t\t\t}\r\n\t\t\tthis.valueName = valueName\r\n\r\n\t\t\tif (returnType === 'object') {\r\n\t\t\t\tthis.modelValue = {\r\n\t\t\t\t\tlabel: valueName,\r\n\t\t\t\t\tvalue: data\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetDefaultPickerLabel() {\r\n\t\t\tconst data = this.modelValue\r\n\t\t\tif (Reflect.toString.call(data) === '[object Object]') {\r\n\t\t\t\tif (Reflect.has(data, 'label')) {\r\n\t\t\t\t\tthis.valueName = data.label\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.valueName = ''\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet valueName = ''\r\n\t\t\tconst { labelKey, returnType, multiple } = this.config\r\n\r\n\t\t\tif (multiple) {\r\n\t\t\t\tconst valueNames = []\r\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\tconst option = this.optionMap.get(data[i])\r\n\t\t\t\t\tconst name = option ? option[labelKey] : ''\r\n\t\t\t\t\tvalueNames.push(name)\r\n\t\t\t\t}\r\n\t\t\t\tvalueName = valueNames.join(',')\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst option = this.optionMap.get(data)\r\n\t\t\t\tvalueName = option ? option[labelKey] : ''\r\n\t\t\t}\r\n\t\t\tthis.valueName = valueName\r\n\r\n\t\t\tif (returnType === 'object') {\r\n\t\t\t\tthis.modelValue = {\r\n\t\t\t\t\tlabel: valueName,\r\n\t\t\t\t\tvalue: data\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonConfirm(e) {\r\n\t\t\tthis.isSelfChange = true\r\n\t\t\tthis.valueName = e.label || ''\r\n\t\t\tif (this.config.returnType === 'object') {\r\n\t\t\t\tthis.modelValue = e\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.modelValue = e[this.config.returnType]\r\n\t\t\t}\r\n\t\t},\r\n\t\tonClear(isPickerClear = true) {\r\n\t\t\tthis.isSelfChange = true\r\n\t\t\tif (isPickerClear) {\r\n\t\t\t\tthis.valueName = ''\r\n\t\t\t}\r\n\r\n\t\t\tif (this.config.returnType === 'object') {\r\n\t\t\t\tthis.modelValue = {\r\n\t\t\t\t\tlabel: undefined,\r\n\t\t\t\t\tvalue: undefined\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.modelValue = undefined\r\n\t\t\t}\r\n\t\t\tthis.$emit('clear', this.attrs)\r\n\t\t},\r\n\t\tonClick(e) {\r\n\t\t\tif (e) {\r\n\t\t\t\tthis.$emit('click', e, this.attrs)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.showSelect = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":""}