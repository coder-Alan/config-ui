{"version":3,"sources":[null,"webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-area-picker/co-area-picker.vue?d14e","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-area-picker/co-area-picker.vue?abc0","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-area-picker/co-area-picker.vue?3c5e","uni-app:///uni_modules/config-ui/components/co-area-picker/co-area-picker.vue"],"names":["name","components","CoPopup","CoPickerHeader","props","show","type","default","data","cityList","areaList","provinceIndex","cityIndex","zoneIndex","pickerValue","computed","showModelValue","get","set","provinces","citys","areas","valueName","labelName","watch","methods","onClear","onConfirm","label","value","onChange","getData","ConfigStore","then","resolve","catch","reject","provinceIndexChange","list","code","console","cityIndexChange"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2H;AAC3H;AACkE;AACL;;;AAG7D;AAC+K;AAC/K,gBAAgB,6KAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,yFAAM;AACR,EAAE,kGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,6FAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACtBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAuqB,CAAgB,wnBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;AC+B3rB;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,eASA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAL;MACA;QACA;MACA;IACA;IACAR;MACA;IACA;IACAC;MACA;IACA;EACA;EACAa;IACAC;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;MACA;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;IACAC;MACA;QACAC,4CACAC;UACAC;QACA,GACAC;UACAC;QACA;MACA;IACA;IACA;AACA;AACA;AACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAEAC;gBACAC;gBACAnB;gBAAA,KACAA;kBAAA;kBAAA;gBAAA;gBACAkB;gBAAA;gBAAA;cAAA;gBAAA;gBAAA,OAGA;cAAA;gBAAAA;gBACAN;cAAA;gBAEA;gBACA;gBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IACA;AACA;AACA;AACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAEAH;gBACAC;gBACAlB;gBAAA,KACAA;kBAAA;kBAAA;gBAAA;gBACAiB;gBAAA;gBAAA;cAAA;gBAAA;gBAAA,OAGA;cAAA;gBAAAA;gBACAN;cAAA;gBAEA;gBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;EACA;AACA;AAAA,2B","file":"uni_modules/config-ui/components/co-area-picker/co-area-picker.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./co-area-picker.vue?vue&type=template&id=2b162a2a&\"\nvar renderjs\nimport script from \"./co-area-picker.vue?vue&type=script&lang=js&\"\nexport * from \"./co-area-picker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/config-ui/components/co-area-picker/co-area-picker.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-area-picker.vue?vue&type=template&id=2b162a2a&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-area-picker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-area-picker.vue?vue&type=script&lang=js&\"","<template>\r\n\t<CoPopup v-model=\"showModelValue\" @closed=\"$emit('closed')\">\r\n\t\t<view class=\"co-picker\">\r\n\t\t\t<CoPickerHeader\r\n\t\t\t\ttitle=\"选择省市区\"\r\n\t\t\t\t@clear=\"onClear\"\r\n\t\t\t\t@confirm=\"onConfirm\"\r\n\t\t\t></CoPickerHeader>\r\n\t\t\t<picker-view\r\n\t\t\t\t:value=\"pickerValue\"\r\n\t\t\t\tclass=\"co-picker__content\"\r\n\t\t\t\t@change=\"onChange\"\r\n\t\t\t>\r\n\t\t\t\t<picker-view-column>\r\n\t\t\t\t\t<view class=\"co-picker__content__item\" v-for=\"item in provinces\" :key=\"item[valueName]\">{{ item[labelName] }}</view>\r\n\t\t\t\t</picker-view-column>\r\n\t\t\t\t<picker-view-column>\r\n\t\t\t\t\t<view class=\"co-picker__content__item\" v-for=\"item in cityList\" :key=\"item[valueName]\">{{ item[labelName] }}</view>\r\n\t\t\t\t</picker-view-column>\r\n\t\t\t\t<picker-view-column>\r\n\t\t\t\t\t<view class=\"co-picker__content__item\" v-for=\"item in areaList\" :key=\"item[valueName]\">{{ item[labelName] }}</view>\r\n\t\t\t\t</picker-view-column>\r\n\t\t\t</picker-view>\r\n\t\t</view>\r\n\t</CoPopup>\r\n</template>\r\n\r\n<script>\r\nimport CoPopup from '../co-popup/co-popup'\r\nimport CoPickerHeader from '../co-picker-header/co-picker-header'\r\n\r\nimport ConfigStore from '../../utils/config-store'\r\n\r\n/**\r\n * CoAreaPicker 省市区选择器\r\n * @property {Boolean} show 是否显示弹框\r\n * @event {Function} update:show 设置 showModelValue 的值时触发\r\n * @event {Function} confirm 点击CoPickerHeader组件的确定按钮触发\r\n * @event {Function} clear 点击CoPickerHeader组件的清除按钮触发\r\n * @event {Function} closed 弹框关闭后触发\r\n */\r\n\r\nexport default {\r\n\tname: 'CoAreaPicker',\r\n\tcomponents: {\r\n\t\tCoPopup,\r\n\t\tCoPickerHeader,\r\n\t},\r\n\tprops: {\r\n\t\tshow: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tcityList: [],\r\n\t\t\tareaList: [],\r\n\t\t\tprovinceIndex: undefined,\r\n\t\t\tcityIndex: undefined,\r\n\t\t\tzoneIndex: 0,\r\n\t\t\tpickerValue: [0, 0, 0]\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tshowModelValue: {\r\n\t\t\tget() {\r\n\t\t\t\treturn this.show\r\n\t\t\t},\r\n\t\t\tset(val) {\r\n\t\t\t\tthis.$emit('update:show', val)\r\n\t\t\t}\r\n\t\t},\r\n\t\tprovinces() {\r\n\t\t\treturn Object.values(ConfigStore.province)\r\n\t\t},\r\n\t\tcitys() {\r\n\t\t\treturn ConfigStore.city\r\n\t\t},\r\n\t\tareas() {\r\n\t\t\treturn ConfigStore.area\r\n\t\t},\r\n\t\tvalueName() {\r\n\t\t\treturn ConfigStore.geoConfig.key\r\n\t\t},\r\n\t\tlabelName() {\r\n\t\t\treturn ConfigStore.geoConfig.value\r\n\t\t}\r\n\t},\r\n\twatch: {\r\n\t\tprovinces(val) {\r\n\t\t\tif (val && val.length) {\r\n\t\t\t\tthis.provinceIndex = 0\r\n\t\t\t}\r\n\t\t},\r\n\t\tprovinceIndex(val) {\r\n\t\t\tthis.provinceIndexChange(val)\r\n\t\t},\r\n\t\tcityIndex(val) {\r\n\t\t\tthis.cityIndexChange(val)\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tonClear() {\r\n\t\t\tthis.$emit('clear')\r\n\t\t\tthis.showModelValue = false\r\n\t\t},\r\n\t\tonConfirm() {\r\n\t\t\tthis.$emit('confirm', {\r\n\t\t\t\tlabel: this.areaList[this.zoneIndex][this.labelName],\r\n\t\t\t\tvalue: this.areaList[this.zoneIndex][this.valueName]\r\n\t\t\t})\r\n\t\t\tthis.showModelValue = false\r\n\t\t},\r\n\t\tonChange({ detail: { value } }) {\r\n\t\t\t// console.log(value)\r\n\t\t\tthis.provinceIndex = value[0]\r\n\t\t\tthis.cityIndex = value[1]\r\n\t\t\tthis.zoneIndex = value[2]\r\n\t\t},\r\n\t\t/**\r\n\t\t * 根据上级区域的区域编码获取下级区域数据\r\n\t\t * @param {String} code 上级区域的区域编码\r\n\t\t * @return {Array} 下级区域数组\r\n\t\t */\r\n\t\tgetData(code) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tConfigStore.geoConfig.getFun(code)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tresolve(res)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\t/**\r\n\t\t * 省份的选择器下标改变时,同时改变市区和地区的数据\r\n\t\t * @param {Number} index 数组下标\r\n\t\t */\r\n\t\tasync provinceIndexChange(index) {\r\n\t\t\ttry{\r\n\t\t\t\tlet list = []\r\n\t\t\t\tconst code = this.provinces[index][this.valueName]\r\n\t\t\t\tconst citys = this.citys[code]\r\n\t\t\t\tif (citys) {\r\n\t\t\t\t\tlist = Object.values(citys)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlist = await this.getData(code)\r\n\t\t\t\t\tConfigStore.setGeoData('city', code, list)\r\n\t\t\t\t}\r\n\t\t\t\tthis.cityList = list\r\n\t\t\t\tthis.cityIndex = 0\r\n\t\t\t\tthis.cityIndexChange(this.cityIndex)\r\n\t\t\t\tthis.pickerValue = [index, 0, 0]\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.warn(`[${code}]市区获取失败：${e}`)\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * 市区的选择器下标改变时,同时改变地区的数据\r\n\t\t * @param {Number} index 数组下标\r\n\t\t */\r\n\t\tasync cityIndexChange(index) {\r\n\t\t\ttry{\r\n\t\t\t\tlet list = []\r\n\t\t\t\tconst code = this.cityList[index][this.valueName]\r\n\t\t\t\tconst areas = this.areas[code]\r\n\t\t\t\tif (areas) {\r\n\t\t\t\t\tlist = Object.values(areas)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlist = await this.getData(code)\r\n\t\t\t\t\tConfigStore.setGeoData('area', code, list)\r\n\t\t\t\t}\r\n\t\t\t\tthis.areaList = list\r\n\t\t\t\tthis.zoneIndex = 0\r\n\t\t\t\tthis.pickerValue = [this.provinceIndex, index, 0]\r\n\t\t\t}catch(e){\r\n\t\t\t\tconsole.warn(`[${code}]区县获取失败：${e}`)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n"],"sourceRoot":""}