{"version":3,"sources":["webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?a90d","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?4daa","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?9ad8","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?09fe","uni-app:///uni_modules/config-ui/components/co-form-upload/co-form-upload.vue","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?fa9d","webpack:///D:/ZHF-Project/config-ui/uni-app/vue2/uni_modules/config-ui/components/co-form-upload/co-form-upload.vue?16d1"],"names":["name","components","CoFormLabel","UploadImage","UploadFile","props","value","type","default","attrs","beforeUpload","beforeRemove","data","uploadList","isSelfChange","computed","modelValue","get","list","uploadData","url","uploadInfo","status","set","Reflect","config","label","labelSize","labelColor","labelStyle","labelIcon","labelIconStyle","borderAlign","max","required","disabled","uploadType","placeholder","customStyle","uploadConfig","count","sourceType","sizeType","customActionSheet","allowOfflineUpload","allowWatermarkOriginalUpload","newAttrs","barClass","hasNet","env","systemInfo","compressionQuality","quality","methods","formatUploadedList","filter","map","onUpload","uni","success","path","size","getActionSheet","actionSheet","handleChooseImage","itemList","events","finishEmit","wx","src","tempFilePath","md5","Object","watermarkData","originalData","watermark","original","fail","console","customChooseImage","compressList","i","res","handleChooseFile","api","extension","chooseFile","title","icon","upload","newData","fileName","index","uploadedData","batchUpload","oldLength","handleModelValue","resolve","reject","uploadRes","fileSize","fileId","onStatusChange","item","onDelete","delData","validate","onClick","formatUploadData","checkIsUploading"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuI;AACvI;AACkE;AACL;AACsC;;;AAGnG;AAC+K;AAC/K,gBAAgB,6KAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,qGAAM;AACR,EAAE,8GAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,yGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAuqB,CAAgB,wnBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;AC2B3rB;AACA;AAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA,gBAyCA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;QAAA;MAAA;IACA;IACAE;MACAH;MACAC;QACA;UAAA;QAAA;MACA;IACA;IACAG;MACAJ;MACAC;QACA;UAAA;QAAA;MACA;IACA;EACA;EACAI;IACA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACAC;MACAC;QAAA;QACA;QACA;UACAC;QACA,OACA;UACA;UACA;YACA;cACA;cACA;cACA;gBACA,qCACA;kBACAC;oBACAC;oBACAC;oBACAC;kBACA;gBACA;cACA,OACA;gBACAH;kBACAC;kBACAE;gBACA;cACA;cACAH;YACA;UACA;UACA;UAAA,KACA;YACAD;cACAE;cACAE;YACA;UACA;QACA;QACA;UACAC;YACA;YACAC;YACA;YACA;YACA;UACA;QACA;MACA;MACAD;QACA;QACA;QACA;MACA;IACA;IACAE;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;UACAC;UACAC;UACAC;QACA;QACAC;QACAC;QACAC;MACA;MAEA;MACAC;;MAEA;IACA;IACAC;MACA,QACA,4EACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;UACAC;UACA;QACA;UACAA;UACA;MAAA;MAEA;IACA;EACA;EACAC;IACAC;MACA,2BACAC;QAAA;MAAA,GACAC;QAAA;MAAA;MACA;IACA;IACAC;MAAA;MACA;MAEA;QACA;MACA,OACA;QACA;MACA,OACA;QACAC,gDACA;UACAC;YACA;cACAC;cACAC;cACA7D;YACA;UACA;QAAA,GACA;MACA;IACA;IACA8D;MACA;MAEA;MACA;QACAC,eACA;UAAArC;UAAApB;QAAA,GACA;UAAAoB;UAAApB;QAAA,GACA;UAAAoB;UAAApB;QAAA,EACA;MACA,OACA;QACAyD,eACA;UAAArC;UAAApB;QAAA,GACA;UAAAoB;UAAApB;QAAA,GACA;UAAAoB;UAAApB;QAAA,EACA;MACA;MAEA;QACAyD;MACA;MAEA;IACA;IACAC;MAAA;MACA;MACA;QAAA;MAAA;MAEAN;QACAO;UAAA;QAAA;QACAN;UACA;YACA;UACA,OACA;YACAD;cACAtC;cACA8C;gBACAC;kBAAA;oBAAA;oBAAA;sBAAA;wBAAA;0BAAA;4BAAA;4BAAA;4BAAA,OAIAC;8BACAC;8BACAjB;4BACA;0BAAA;4BAAA;4BAHAkB;4BAIAV;4BAAA;4BAAA;0BAAA;4BAAA;4BAAA;4BAEAA;0BAAA;4BAAA;4BAAA,OAGA;0BAAA;4BAAA;4BAAAW;4BAAAV;4BACAW;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","file":"uni_modules/config-ui/components/co-form-upload/co-form-upload.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./co-form-upload.vue?vue&type=template&id=ee72712a&scoped=true&\"\nvar renderjs\nimport script from \"./co-form-upload.vue?vue&type=script&lang=js&\"\nexport * from \"./co-form-upload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./co-form-upload.vue?vue&type=style&index=0&id=ee72712a&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee72712a\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/config-ui/components/co-form-upload/co-form-upload.vue\"\nexport default component.exports","export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-upload.vue?vue&type=template&id=ee72712a&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = !(_vm.config.uploadType === \"image\")\n    ? [\"file\", \"video\"].includes(_vm.config.uploadType)\n    : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-upload.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"co-form-upload\" :class=\"barClass\" :style=\"config.customStyle\">\r\n    <CoFormLabel :config=\"config\" @iconClick=\"onClick\"></CoFormLabel>\r\n    <UploadImage\r\n      v-if=\"config.uploadType === 'image'\"\r\n      :value=\"uploadList\"\r\n      :config=\"config\"\r\n      @statusChange=\"onStatusChange\"\r\n      @delete=\"onDelete\"\r\n      @upload=\"onUpload\"\r\n    ></UploadImage>\r\n    <UploadFile\r\n      v-else-if=\"['file', 'video'].includes(config.uploadType)\"\r\n      :value=\"uploadList\"\r\n      :config=\"config\"\r\n      @statusChange=\"onStatusChange\"\r\n      @delete=\"onDelete\"\r\n      @upload=\"onUpload\"\r\n    ></UploadFile>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport CoFormLabel from '../co-form-label/co-form-label'\r\nimport UploadImage from './upload-image'\r\nimport UploadFile from './upload-file'\r\n\r\nimport { handleUpload, getFileInfo } from '../../utils/file-handler.js'\r\nimport ConfigStore from '../../utils/config-store.js'\r\n\r\n/**\r\n * FormUpload 表单上传\r\n * @description form组件的内置组件，支持图片、视频和文件上传\r\n * @property {Array<object>|String} v-model 已上传的文件列表，格式为[{url: 'http://xxx', uploadInfo: {}}]或字符串\r\n * @property {Object} attrs 组件属性\r\n *  @field {String} label 标签内容\r\n *  @field {String} labelSize 标签字体大小\r\n *  @field {String} labelColor 标签字体颜色\r\n *  @field {String} labelStyle 标签样式\r\n *  @field {String} labelIcon 标签图标\r\n *  @field {String} labelIconStyle 标签图标样式\r\n *  @field {String} borderAlign = [top|bottom|vertical] 边框位置\r\n *    @value top 上边框\r\n *    @value bottom 下边框\r\n *    @value vertical 上下边框\r\n *    @default bottom\r\n *  @field {Number} max 最多上传多少张图片\r\n *    @default 1\r\n *  @field {Boolean} required 是否必填\r\n *  @field {Boolean} disabled 是否禁用\r\n *  @field {String} uploadType = [image|file|video] 上传类型\r\n *    @value image 图片\r\n *    @value file 文件\r\n *    @value video 视频\r\n *    @default image\r\n *  @field {String} placeholder 待上传时的占位符，仅 uploadType = file/video 生效\r\n *  @field {String} customStyle 自定义样式\r\n *  @field {Object} uploadConfig 上传配置\r\n *  @field {Array<object>} customActionSheet 自定义菜单按钮，格式为[{label: '*', value: '*'}]\r\n *  @field {Boolean} allowOfflineUpload 是否允许在断网情况下上传\r\n *  @field {Boolean} allowWatermarkOriginalUpload 是否允许水印上传后再上传水印原图\r\n * @property {Function} before-upload 上传文件之前的钩子，参数为上传的文件，若返回 Promise 且被 reject，则停止上传。\r\n * @property {Function} before-remove 删除文件之前的钩子，参数为上传的文件和上传列表，若返回 Promise 且被 reject，则停止上传。\r\n * @event {Function} watermarkOriginal 水印原图上传完成后触发，返回水印数据和原图数据\r\n * @event {Function} fulfilled 上传成功后触发\r\n * @event {Function} rejected 上传失败后触发\r\n * @event {Function} uploadRemove 删除上传文件后触发\r\n * @event {Function} 自定义事件名 点击标签图标时触发\r\n * @event {Function} 自定义事件名 点击自定义菜单时触发\r\n */\r\n\r\nexport default {\r\n  name: 'CoFormUpload',\r\n  components: {\r\n    CoFormLabel,\r\n    UploadImage,\r\n    UploadFile,\r\n  },\r\n  props: {\r\n    value: {\r\n      type: [Array, String],\r\n      default: []\r\n    },\r\n    attrs: {\r\n      type: Object | null,\r\n      default: () => ({})\r\n    },\r\n    beforeUpload: {\r\n      type: Function,\r\n      default: () => {\r\n        return () => Promise.resolve()\r\n      }\r\n    },\r\n    beforeRemove: {\r\n      type: Function,\r\n      default: () => {\r\n        return () => Promise.resolve()\r\n      }\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      uploadList: [], // 上传列表\r\n      isSelfChange: false, // 是否是内部改变数据\r\n    }\r\n  },\r\n  computed: {\r\n    modelValue: {\r\n      get() {\r\n        let list = []\r\n        if (this.isSelfChange) {\r\n          list = this.uploadList\r\n        }\r\n        else {\r\n          // 如果 value 的类型是Array，则检测每一项是否是对象\r\n          if (Object.prototype.toString.call(this.value) === '[object Array]') {\r\n            for (let i = 0; i < this.value.length; i++) {\r\n              const item = this.value[i]\r\n              let uploadData\r\n              if (typeof(item) === 'object') {\r\n                if (item.url) uploadData = item\r\n                else {\r\n                  uploadData = {\r\n                    url: item.fileId,\r\n                    uploadInfo: item,\r\n                    status: 'fulfilled'\r\n                  }\r\n                }\r\n              }\r\n              else if (typeof(item) === 'string') {\r\n                uploadData = {\r\n                  url: item,\r\n                  status: 'fulfilled'\r\n                }\r\n              }\r\n              uploadData && list.push(this.formatUploadData(uploadData))\r\n            }\r\n          }\r\n          // 如果 value 的类型是 String ，则自动转换为 Array\r\n          else if (Object.prototype.toString.call(this.value) === '[object String]' && this.value) {\r\n            list.push(this.formatUploadData({\r\n              url: this.value,\r\n              status: 'fulfilled'\r\n            }))\r\n          }\r\n        }\r\n        return new Proxy(list, {\r\n          set: (target, key, value) => {\r\n            this.isSelfChange = true\r\n            Reflect.set(target, key, value)\r\n            this.uploadList = [...target]\r\n            this.$emit('input', this.formatUploadedList())\r\n            return true\r\n          }\r\n        })\r\n      },\r\n      set(val) {\r\n        this.isSelfChange = true\r\n        this.uploadList = val\r\n        this.$emit('input', this.formatUploadedList())\r\n      }\r\n    },\r\n    config() {\r\n      const defaultAttrs = {\r\n        label: '',\r\n        labelSize: '32rpx',\r\n        labelColor: '#999',\r\n        labelStyle: '',\r\n        labelIcon: '',\r\n        labelIconStyle: '',\r\n        borderAlign: 'bottom',\r\n        max: 1,\r\n        required: false,\r\n        disabled: false,\r\n        uploadType: 'image',\r\n        placeholder: '',\r\n        customStyle: '',\r\n        uploadConfig: {\r\n          count: 1,\r\n          sourceType: ['album', 'camera'],\r\n          sizeType: ['compressed'],\r\n        },\r\n        customActionSheet: [],\r\n        allowOfflineUpload: false,\r\n        allowWatermarkOriginalUpload: false,\r\n      }\r\n\r\n      const newAttrs = Object.assign(defaultAttrs, this.attrs)\r\n      newAttrs.uploadConfig.count = newAttrs.max ? newAttrs.max > 1 && newAttrs.max <= 9 ? newAttrs.max : 9 : 1 // 多选，最多可以同时选择的图片张数，最多9张\r\n\r\n      return newAttrs\r\n    },\r\n    barClass() {\r\n      return [\r\n        this.config.borderAlign ? `co-border-${this.config.borderAlign}` : ''\r\n      ]\r\n    },\r\n    hasNet() {\r\n      return ConfigStore.hasNet\r\n    },\r\n    env() {\r\n      return ConfigStore.env\r\n    },\r\n    systemInfo() {\r\n      return ConfigStore.systemInfo\r\n    },\r\n    // 图片的压缩质量\r\n    compressionQuality() {\r\n      let quality = 50\r\n      switch (this.systemInfo.platform){\r\n        case 'android':\r\n          quality = 50\r\n          break;\r\n        case 'ios':\r\n          quality = 30\r\n          break;\r\n      }\r\n      return quality\r\n    }\r\n  },\r\n  methods: {\r\n    formatUploadedList() {\r\n      const list = this.uploadList\r\n        .filter(item => item.status === 'fulfilled')\r\n        .map(item => item.uploadInfo)\r\n      return list\r\n    },\r\n    onUpload() {\r\n      if (this.config.disabled) return\r\n\r\n      if (this.config.uploadType === 'image') {\r\n        this.handleChooseImage()\r\n      }\r\n      else if (this.config.uploadType === 'file') {\r\n        this.handleChooseFile()\r\n      }\r\n      else if (this.config.uploadType === 'video') {\r\n        uni.chooseVideo({\r\n          ...this.config.uploadConfig,\r\n          success: (res) => {\r\n            this.upload({\r\n              path: res.tempFilePath,\r\n              size: res.size,\r\n              name: `${new Date().getTime()}.${res.tempFilePath.split('.').reverse()[0]}`\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    getActionSheet() {\r\n      const customActionSheet = this.config.customActionSheet\r\n\r\n      let actionSheet\r\n      if (this.config.uploadType === 'image') {\r\n        actionSheet = [\r\n          { label: '拍摄', value: 'camera' },\r\n          { label: '水印拍摄', value: 'watermark' },\r\n          { label: '从相册选择', value: 'album' },\r\n        ]\r\n      }\r\n      else if (this.config.uploadType === 'file') {\r\n        actionSheet = [\r\n          { label: '拍摄', value: 'camera' },\r\n          { label: '从相册选择', value: 'album' },\r\n          { label: '从聊天选择', value: 'message' },\r\n        ]\r\n      }\r\n\r\n      if (Reflect.toString.call(customActionSheet) === '[object Array]') {\r\n        actionSheet = actionSheet.concat(customActionSheet)\r\n      }\r\n\r\n      return actionSheet\r\n    },\r\n    handleChooseImage() {\r\n      const actionSheet = this.getActionSheet()\r\n      const list = actionSheet.filter(item => this.config.uploadConfig.sourceType.includes(item.value))\r\n\r\n      uni.showActionSheet({\r\n        itemList: list.map(item => item.label),\r\n        success: (res) => {\r\n          if (list[res.tapIndex].value !== 'watermark') {\r\n            this.customChooseImage([list[res.tapIndex].value])\r\n          }\r\n          else {\r\n            uni.navigateTo({\r\n              url: '/page_common/watermarkImage',\r\n              events: {\r\n                finishEmit: async (data) => {\r\n                  let path\r\n                  try{\r\n                    // 压缩的临时路径\r\n                    const { tempFilePath } = await wx.compressImage({\r\n                      src: data.path,\r\n                      quality: this.compressionQuality\r\n                    })\r\n                    path = tempFilePath\r\n                  }catch(e){\r\n                    path = data.path\r\n                  }\r\n\r\n                  const { digest: md5, size } = await getFileInfo(path)\r\n                  Object.assign(data, {\r\n                    md5,\r\n                    size,\r\n                    path\r\n                  })\r\n                  // 上传水印图片\r\n                  const watermarkData = await this.upload(data)\r\n\r\n                  // 上传水印原图，把附件信息传到外部\r\n                  if (this.config.allowWatermarkOriginalUpload) {\r\n                    if (this.hasNet && watermarkData) {\r\n                      const originalData = await handleUpload({ path: data.originalPath })\r\n                      this.$emit('click', 'watermarkOriginal', {\r\n                        watermark: watermarkData,\r\n                        original: originalData,\r\n                      })\r\n                    }\r\n\r\n                    if (!this.hasNet && this.config.allowOfflineUpload) {\r\n                      this.$emit('click', 'watermarkOriginal', {\r\n                        watermark: watermarkData,\r\n                        original: data,\r\n                      })\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            })\r\n          }\r\n        },\r\n        fail: function (res) {\r\n          console.warn(res.errMsg)\r\n        }\r\n      })\r\n    },\r\n    customChooseImage(sourceType) {\r\n      uni.chooseImage({\r\n        ...this.config.uploadConfig,\r\n        sourceType,\r\n        success: async (res) => {\r\n          // 压缩图片\r\n          const compressList = [] // 压缩列表\r\n          for (let i = 0; i < res.tempFiles.length; i++) {\r\n            let path\r\n            try{\r\n              // 压缩的临时路径\r\n              const { tempFilePath } = await wx.compressImage({\r\n                src: res.tempFiles[i].path,\r\n                quality: this.compressionQuality\r\n              })\r\n              path = tempFilePath\r\n            }catch(e){\r\n              path = res.tempFiles[i].path\r\n            }\r\n\r\n            const { digest: md5, size } = await getFileInfo(path)\r\n            compressList.push({\r\n              ...res.tempFiles[i],\r\n              path,\r\n              md5,\r\n              size\r\n            })\r\n          }\r\n\r\n          this.batchUpload(compressList)\r\n        }\r\n      })\r\n    },\r\n    handleChooseFile() {\r\n      const list = this.getActionSheet()\r\n\r\n      uni.showActionSheet({\r\n        itemList: list.map(item => item.label),\r\n        success: (res) => {\r\n          const action = list[res.tapIndex].value\r\n\r\n          if (['camera', 'album'].includes(action)) {\r\n            this.customChooseImage([action])\r\n          }\r\n          else if (action === 'message') {\r\n            const chooseFile = (api) => {\r\n              api({\r\n                type: 'file',\r\n                extension: ['.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx', '.pdf', '.txt'],\r\n                ...this.config.uploadConfig,\r\n                success: (res) => {\r\n                  this.batchUpload(res.tempFiles)\r\n                }\r\n              })\r\n            }\r\n\r\n            if (this.env === 'QW') {\r\n              wx.qy.checkSession({\r\n                success: () => {\r\n                  chooseFile(wx.qy.chooseMessageFile)\r\n                },\r\n                fail: () => {\r\n                  uni.showToast({\r\n                    title: '企微登录已过期',\r\n                    icon: 'error'\r\n                  })\r\n                }\r\n              })\r\n            }\r\n            else {\r\n              chooseFile(wx.chooseMessageFile)\r\n            }\r\n          }\r\n          else {\r\n            this.$emit('click', action)\r\n            this.$emit(action)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 单个上传处理方法\r\n     * @param {Object} data 本地临时文件信息\r\n     * @param {String} data.path 本地临时文件路径 (本地路径)\r\n     * @param {Number} data.size 本地临时文件大小，单位 B\r\n     */\r\n    async upload(data) {\r\n      const newData = this.formatUploadData({\r\n        status: 'pending',\r\n        md5: data.md5,\r\n        url: data.path,\r\n        uploadInfo: {\r\n          fileName: data.name\r\n        }\r\n      })\r\n\r\n      try {\r\n        await this.beforeUpload([newData])\r\n      } catch (err) {\r\n        throw new Error(err?.message)\r\n      }\r\n\r\n      const index = this.modelValue.length\r\n      this.modelValue[index] = newData\r\n\r\n      let uploadedData\r\n      try {\r\n        uploadedData = await this.handleModelValue(index)\r\n      } catch (err) {\r\n        throw new Error(err?.message)\r\n      }\r\n\r\n      return uploadedData\r\n    },\r\n    /**\r\n     * 批量上传处理方法\r\n     * @param {Object} list 文件集合\r\n     */\r\n    async batchUpload(list = []) {\r\n      if (!list.length) return\r\n\r\n      const modelValue = [ ...this.modelValue ] || []\r\n      const oldLength = modelValue.length\r\n\r\n      try {\r\n        await this.beforeUpload(list)\r\n      } catch (err) {\r\n        throw new Error(err?.message)\r\n      }\r\n\r\n      for (let i = 0; i < list.length; i++) {\r\n        modelValue.push(this.formatUploadData({\r\n          status: 'pending',\r\n          md5: list[i].md5,\r\n          url: list[i].path,\r\n          uploadInfo: {\r\n            fileName: list[i].name\r\n          }\r\n        }))\r\n      }\r\n\r\n      this.modelValue = modelValue\r\n\r\n      for (let i = 0; i < list.length; i++) {\r\n        this.handleModelValue(i + oldLength)\r\n      }\r\n    },\r\n    handleModelValue(index) {\r\n      return new Promise((resolve, reject) => {\r\n        this.$nextTick(async () => {\r\n          // 无网络状态\r\n          if (!this.hasNet) {\r\n            // 如果允许在断网情况下上传，则直接将状态置为'uploaded'\r\n            // 以便在网络恢复后，可以继续上传\r\n            if (this.config.allowOfflineUpload) {\r\n              this.modelValue[index] = {\r\n                ...this.modelValue[index],\r\n                status: 'uploaded'\r\n              }\r\n              return resolve(this.modelValue[index])\r\n            }\r\n            else {\r\n              this.modelValue[index] = {\r\n                ...this.modelValue[index],\r\n                status: 'rejected'\r\n              }\r\n              return reject('当前检测到是断网状态，无法上传文件')\r\n            }\r\n          }\r\n\r\n          let uploadRes = null\r\n          try {\r\n            uploadRes = await handleUpload({ path: this.modelValue[index].url })\r\n          }\r\n          catch (err) {\r\n            console.warn(err)\r\n          }\r\n\r\n          if (uploadRes) {\r\n            this.modelValue[index] = {\r\n              ...this.modelValue[index],\r\n              uploadInfo: {\r\n                fileName: uploadRes.fileName,\r\n                fileSize: uploadRes.fileSize,\r\n                fileId: uploadRes.fileId,\r\n              },\r\n              status: 'uploaded'\r\n            }\r\n          }\r\n          else {\r\n            this.modelValue[index] = this.formatUploadData({\r\n              ...this.modelValue[index],\r\n              status: 'rejected'\r\n            })\r\n          }\r\n\r\n          resolve(uploadRes)\r\n        })\r\n      })\r\n    },\r\n    onStatusChange(index) {\r\n      const item = this.modelValue[index]\r\n      item.status = 'fulfilled'\r\n      this.$emit('click', 'fulfilled', item)\r\n      this.modelValue[index] = item\r\n    },\r\n    async onDelete(index) {\r\n      const delData = JSON.parse(JSON.stringify(this.modelValue[index]))\r\n\r\n      try {\r\n        await this.beforeRemove(delData, this.modelValue)\r\n      } catch (err) {\r\n        throw new Error(err?.message)\r\n      }\r\n\r\n      if (this.config.max === 1) {\r\n        this.modelValue = []\r\n      } else {\r\n        this.modelValue.splice(index, 1)\r\n      }\r\n\r\n      this.$emit('click', 'uploadRemove', delData)\r\n    },\r\n    validate() {\r\n      if (this.modelValue.length) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    onClick(e) {\r\n      this.$emit('click', e, this.attrs)\r\n    },\r\n    formatUploadData(data) {\r\n      const defaultData = {\r\n        status: '',\r\n        url: '',\r\n        md5: '',\r\n        uploadInfo: null\r\n      }\r\n      return Object.assign(defaultData, data)\r\n    },\r\n    /**\r\n     * 检查当前是否有附件正在上传中\r\n     */\r\n    checkIsUploading() {\r\n      return this.modelValue.some(item => item.status === 'pending')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.co-form-upload {\r\n  padding: 24rpx 24rpx 24rpx 32rpx;\r\n  background-color: #FFFFFF;\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-upload.vue?vue&type=style&index=0&id=ee72712a&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../../HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./co-form-upload.vue?vue&type=style&index=0&id=ee72712a&lang=scss&scoped=true&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1741221771839\n      var cssReload = require(\"D:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}